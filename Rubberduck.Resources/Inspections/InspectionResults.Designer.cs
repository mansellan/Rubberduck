//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rubberduck.Resources.Inspections {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class InspectionResults {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal InspectionResults() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Rubberduck.Resources.Inspections.InspectionResults", typeof(InspectionResults).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} ({1} results). ähnelt.
        /// </summary>
        public static string AggregateInspection {
            get {
                return ResourceManager.GetString("AggregateInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use of late bound &apos;Application.{0}&apos; member. ähnelt.
        /// </summary>
        public static string ApplicationWorksheetFunctionInspection {
            get {
                return ResourceManager.GetString("ApplicationWorksheetFunctionInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parameter &apos;{0}&apos; is passed &apos;ByVal&apos; and assigned a value. ähnelt.
        /// </summary>
        public static string AssignedByValParameterInspection {
            get {
                return ResourceManager.GetString("AssignedByValParameterInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An assignment is immediately overridden by another assignment or is never referenced. ähnelt.
        /// </summary>
        public static string AssignmentNotUsedInspection {
            get {
                return ResourceManager.GetString("AssignmentNotUsedInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The attribute value(s) for attribute {0} ({1}) are out of sync with the {2} annotation.  ähnelt.
        /// </summary>
        public static string AttributeValueOutOfSyncInspection {
            get {
                return ResourceManager.GetString("AttributeValueOutOfSyncInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Boolean literal &apos;{0}&apos; assigned in conditional. ähnelt.
        /// </summary>
        public static string BooleanAssignedInIfElseInspection {
            get {
                return ResourceManager.GetString("BooleanAssignedInIfElseInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Project &apos;{0}&apos; has default name. ähnelt.
        /// </summary>
        public static string DefaultProjectNameInspection {
            get {
                return ResourceManager.GetString("DefaultProjectNameInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Consider the explicit use of &apos;As {0}&apos; instead of &apos;{1}&apos;. ähnelt.
        /// </summary>
        public static string DefTypeStatementInspection {
            get {
                return ResourceManager.GetString("DefTypeStatementInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Annotation &apos;{0}&apos; is duplicated. ähnelt.
        /// </summary>
        public static string DuplicatedAnnotationInspection {
            get {
                return ResourceManager.GetString("DuplicatedAnnotationInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;Case&apos; block contains no executable statements. ähnelt.
        /// </summary>
        public static string EmptyCaseBlockInspection {
            get {
                return ResourceManager.GetString("EmptyCaseBlockInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;Do...While&apos; loop contains no executable statements. ähnelt.
        /// </summary>
        public static string EmptyDoWhileBlockInspection {
            get {
                return ResourceManager.GetString("EmptyDoWhileBlockInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;Else&apos; block contains no executable statements. ähnelt.
        /// </summary>
        public static string EmptyElseBlockInspection {
            get {
                return ResourceManager.GetString("EmptyElseBlockInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;For...Each&apos; loop contains no executable statements. ähnelt.
        /// </summary>
        public static string EmptyForEachBlockInspection {
            get {
                return ResourceManager.GetString("EmptyForEachBlockInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;For...Next&apos; loop contains no executable statements. ähnelt.
        /// </summary>
        public static string EmptyForLoopBlockInspection {
            get {
                return ResourceManager.GetString("EmptyForLoopBlockInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;If&apos; block contains no executable statements. ähnelt.
        /// </summary>
        public static string EmptyIfBlockInspection {
            get {
                return ResourceManager.GetString("EmptyIfBlockInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Module/class &apos;{0}&apos; is empty. ähnelt.
        /// </summary>
        public static string EmptyModuleInspection {
            get {
                return ResourceManager.GetString("EmptyModuleInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;vbNullString&apos; preferred to empty string literals. ähnelt.
        /// </summary>
        public static string EmptyStringLiteralInspection {
            get {
                return ResourceManager.GetString("EmptyStringLiteralInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;While...Wend&apos; loop contains no executable statements. ähnelt.
        /// </summary>
        public static string EmptyWhileWendBlockInspection {
            get {
                return ResourceManager.GetString("EmptyWhileWendBlockInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Public field &apos;{0}&apos; breaks encapsulation. ähnelt.
        /// </summary>
        public static string EncapsulatePublicFieldInspection {
            get {
                return ResourceManager.GetString("EncapsulatePublicFieldInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Result of &apos;{0}&apos; call is not tested for &apos;Nothing&apos;. ähnelt.
        /// </summary>
        public static string ExcelMemberMayReturnNothingInspection {
            get {
                return ResourceManager.GetString("ExcelMemberMayReturnNothingInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; is hidden by a valid Excel cell reference. ähnelt.
        /// </summary>
        public static string ExcelUdfNameIsValidCellReferenceInspection {
            get {
                return ResourceManager.GetString("ExcelUdfNameIsValidCellReferenceInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Return value of function &apos;{0}&apos; is never used. ähnelt.
        /// </summary>
        public static string FunctionReturnValueNotUsedInspection {
            get {
                return ResourceManager.GetString("FunctionReturnValueNotUsedInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Expression &apos;{0}&apos; cannot be validated at compile-time. ähnelt.
        /// </summary>
        public static string HostSpecificExpressionInspection {
            get {
                return ResourceManager.GetString("HostSpecificExpressionInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Consider renaming {0} &apos;{1}&apos;. ähnelt.
        /// </summary>
        public static string IdentifierNameInspection {
            get {
                return ResourceManager.GetString("IdentifierNameInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} &apos;{1}&apos; is not used. ähnelt.
        /// </summary>
        public static string IdentifierNotUsedInspection {
            get {
                return ResourceManager.GetString("IdentifierNotUsedInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Annotation &apos;{0}&apos; is illegal in this context. ähnelt.
        /// </summary>
        public static string IllegalAnnotationInspection {
            get {
                return ResourceManager.GetString("IllegalAnnotationInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Member &apos;{0}&apos; implicitly references &apos;ActiveSheet&apos;. ähnelt.
        /// </summary>
        public static string ImplicitActiveSheetReferenceInspection {
            get {
                return ResourceManager.GetString("ImplicitActiveSheetReferenceInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Member &apos;{0}&apos; implicitly references &apos;ActiveWorkbook&apos;. ähnelt.
        /// </summary>
        public static string ImplicitActiveWorkbookReferenceInspection {
            get {
                return ResourceManager.GetString("ImplicitActiveWorkbookReferenceInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parameter &apos;{0}&apos; is implicitly passed by reference. ähnelt.
        /// </summary>
        public static string ImplicitByRefModifierInspection {
            get {
                return ResourceManager.GetString("ImplicitByRefModifierInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Assignment to &apos;{0}&apos; implicitly assigns default member of class &apos;{1}&apos;. ähnelt.
        /// </summary>
        public static string ImplicitDefaultMemberAssignmentInspection {
            get {
                return ResourceManager.GetString("ImplicitDefaultMemberAssignmentInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Member &apos;{0}&apos; is implicitly public. ähnelt.
        /// </summary>
        public static string ImplicitPublicMemberInspection {
            get {
                return ResourceManager.GetString("ImplicitPublicMemberInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} &apos;{1}&apos; is implicitly &apos;Variant&apos;. ähnelt.
        /// </summary>
        public static string ImplicitVariantDeclarationInspection {
            get {
                return ResourceManager.GetString("ImplicitVariantDeclarationInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Return type of member &apos;{0}&apos; is implicitly &apos;Variant&apos;. ähnelt.
        /// </summary>
        public static string ImplicitVariantReturnTypeInspection {
            get {
                return ResourceManager.GetString("ImplicitVariantReturnTypeInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} &apos;{1}&apos; is declared as &apos;Integer&apos;. ähnelt.
        /// </summary>
        public static string IntegerDataTypeInspection {
            get {
                return ResourceManager.GetString("IntegerDataTypeInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;IsMissing&apos; will always return false with the passed argument. ähnelt.
        /// </summary>
        public static string IsMissingOnInappropriateArgumentInspection {
            get {
                return ResourceManager.GetString("IsMissingOnInappropriateArgumentInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;IsMissing&apos; is passed an expression that is not an argument to the enclosing procedure. ähnelt.
        /// </summary>
        public static string IsMissingWithNonArgumentParameterInspection {
            get {
                return ResourceManager.GetString("IsMissingWithNonArgumentParameterInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Keyword used as an identifier for the member &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string KeywordsUsedAsMemberInspection {
            get {
                return ResourceManager.GetString("KeywordsUsedAsMemberInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Line continuation(s) in unexpected places.  ähnelt.
        /// </summary>
        public static string LineContinuationBetweenKeywordsInspection {
            get {
                return ResourceManager.GetString("LineContinuationBetweenKeywordsInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Line label &apos;{0}&apos; is not used. ähnelt.
        /// </summary>
        public static string LineLabelNotUsedInspection {
            get {
                return ResourceManager.GetString("LineLabelNotUsedInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Member &apos;{0}&apos; was not found on the compile-time interface for type &apos;{1}&apos;. ähnelt.
        /// </summary>
        public static string MemberNotOnInterfaceInspection {
            get {
                return ResourceManager.GetString("MemberNotOnInterfaceInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Expression &apos;{0}&apos; was expected to contain a parameter, but none was specified. ähnelt.
        /// </summary>
        public static string MissingAnnotationArgumentInspection {
            get {
                return ResourceManager.GetString("MissingAnnotationArgumentInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Module or member &apos;{0}&apos; has a &apos;{1}&apos; annotation, but no corresponding attribute. ähnelt.
        /// </summary>
        public static string MissingAttributeInspection {
            get {
                return ResourceManager.GetString("MissingAttributeInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Member &apos;{0}&apos; has a &apos;{1}&apos; attribute with value(s) &apos;{2}&apos;, but no corresponding annotation. ähnelt.
        /// </summary>
        public static string MissingMemberAnnotationInspection {
            get {
                return ResourceManager.GetString("MissingMemberAnnotationInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Module &apos;{0}&apos; has a &apos;{1}&apos; attribute with value(s) &apos;{2}&apos;, but no corresponding annotation. ähnelt.
        /// </summary>
        public static string MissingModuleAnnotationInspection {
            get {
                return ResourceManager.GetString("MissingModuleAnnotationInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Module-level variable &apos;{0}&apos; is declared with the &apos;Dim&apos; keyword. ähnelt.
        /// </summary>
        public static string ModuleScopeDimKeywordInspection {
            get {
                return ResourceManager.GetString("ModuleScopeDimKeywordInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Module &apos;{0}&apos; has no &apos;@Folder&apos; annotation ähnelt.
        /// </summary>
        public static string ModuleWithoutFolderInspection {
            get {
                return ResourceManager.GetString("ModuleWithoutFolderInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Move module-level variable &apos;{0}&apos; to a smaller scope. ähnelt.
        /// </summary>
        public static string MoveFieldCloserToUsageInspection {
            get {
                return ResourceManager.GetString("MoveFieldCloserToUsageInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parameter &apos;{0}&apos; is specified on multiple lines. ähnelt.
        /// </summary>
        public static string MultilineParameterInspection {
            get {
                return ResourceManager.GetString("MultilineParameterInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Instruction contains multiple declarations. ähnelt.
        /// </summary>
        public static string MultipleDeclarationsInspection {
            get {
                return ResourceManager.GetString("MultipleDeclarationsInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Negative line number encountered ähnelt.
        /// </summary>
        public static string NegativeLineNumberInspection {
            get {
                return ResourceManager.GetString("NegativeLineNumberInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Non-breaking space encountered in identifier &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string NonBreakingSpaceIdentifierInspection {
            get {
                return ResourceManager.GetString("NonBreakingSpaceIdentifierInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Return value for member &apos;{0}&apos; is never assigned. ähnelt.
        /// </summary>
        public static string NonReturningFunctionInspection {
            get {
                return ResourceManager.GetString("NonReturningFunctionInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Object variable &apos;{0}&apos; is assigned without the &apos;Set&apos; keyword. ähnelt.
        /// </summary>
        public static string ObjectVariableNotSetInspection {
            get {
                return ResourceManager.GetString("ObjectVariableNotSetInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; is declared using the obsolete &apos;CDecl&apos; calling convention. ähnelt.
        /// </summary>
        public static string ObsoleteCallingConventionInspection {
            get {
                return ResourceManager.GetString("ObsoleteCallingConventionInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Assignment uses obsolete &apos;Call&apos; modifier. ähnelt.
        /// </summary>
        public static string ObsoleteCallStatementInspection {
            get {
                return ResourceManager.GetString("ObsoleteCallStatementInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Comment uses obsolete &apos;Rem&apos; marker. ähnelt.
        /// </summary>
        public static string ObsoleteCommentSyntaxInspection {
            get {
                return ResourceManager.GetString("ObsoleteCommentSyntaxInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A run-time error is raised using the obsolete &apos;Error&apos; statement. ähnelt.
        /// </summary>
        public static string ObsoleteErrorSyntaxInspection {
            get {
                return ResourceManager.GetString("ObsoleteErrorSyntaxInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} &apos;{1}&apos; uses obsolete &apos;Global&apos; access modifier. ähnelt.
        /// </summary>
        public static string ObsoleteGlobalInspection {
            get {
                return ResourceManager.GetString("ObsoleteGlobalInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Assignment uses obsolete &apos;Let&apos; modifier. ähnelt.
        /// </summary>
        public static string ObsoleteLetStatementInspection {
            get {
                return ResourceManager.GetString("ObsoleteLetStatementInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Consider replacing the call to &apos;{0}&apos;. {1} ähnelt.
        /// </summary>
        public static string ObsoleteMemberUsageInspection {
            get {
                return ResourceManager.GetString("ObsoleteMemberUsageInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} of {1} &apos;{2}&apos; uses an obsolete type hint. ähnelt.
        /// </summary>
        public static string ObsoleteTypeHintInspection {
            get {
                return ResourceManager.GetString("ObsoleteTypeHintInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;While...Wend&apos; conditional loop can be written as a &apos;Do While...Loop&apos; block. ähnelt.
        /// </summary>
        public static string ObsoleteWhileWendStatementInspection {
            get {
                return ResourceManager.GetString("ObsoleteWhileWendStatementInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die On Error GoTo -1 encountered ähnelt.
        /// </summary>
        public static string OnErrorGoToMinusOneInspection {
            get {
                return ResourceManager.GetString("OnErrorGoToMinusOneInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;On Local Error&apos; statement detected. ähnelt.
        /// </summary>
        public static string OnLocalErrorInspection {
            get {
                return ResourceManager.GetString("OnLocalErrorInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Component &apos;{0}&apos; uses &apos;Option Base 1&apos;. ähnelt.
        /// </summary>
        public static string OptionBaseInspection {
            get {
                return ResourceManager.GetString("OptionBaseInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Component &apos;{0}&apos; uses &apos;Option Base 0&apos;. ähnelt.
        /// </summary>
        public static string OptionBaseZeroInspection {
            get {
                return ResourceManager.GetString("OptionBaseZeroInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;Option Explicit&apos; is not specified in &apos;{0}&apos;. ähnelt.
        /// </summary>
        public static string OptionExplicitInspection {
            get {
                return ResourceManager.GetString("OptionExplicitInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parameter &apos;{0}&apos; can be passed by value. ähnelt.
        /// </summary>
        public static string ParameterCanBeByValInspection {
            get {
                return ResourceManager.GetString("ParameterCanBeByValInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parameter &apos;{0}&apos; is never used. ähnelt.
        /// </summary>
        public static string ParameterNotUsedInspection {
            get {
                return ResourceManager.GetString("ParameterNotUsedInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Procedure &apos;{0}&apos; can be written as a function. ähnelt.
        /// </summary>
        public static string ProcedureCanBeWrittenAsFunctionInspection {
            get {
                return ResourceManager.GetString("ProcedureCanBeWrittenAsFunctionInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Procedure &apos;{0}&apos; can be written as a function. ähnelt.
        /// </summary>
        public static string ProcedureShouldBeFunctionInspection {
            get {
                return ResourceManager.GetString("ProcedureShouldBeFunctionInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parameter &apos;{0}&apos; has a redundant &apos;ByRef&apos; modifier. ähnelt.
        /// </summary>
        public static string RedundantByRefModifierInspection {
            get {
                return ResourceManager.GetString("RedundantByRefModifierInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; has no effect. ähnelt.
        /// </summary>
        public static string RedundantOptionInspection {
            get {
                return ResourceManager.GetString("RedundantOptionInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Object reference &apos;{0}&apos; is auto-instantiated. ähnelt.
        /// </summary>
        public static string SelfAssignedDeclarationInspection {
            get {
                return ResourceManager.GetString("SelfAssignedDeclarationInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} &apos;{1}&apos; hides {2} &apos;{3}&apos;. ähnelt.
        /// </summary>
        public static string ShadowedDeclarationInspection {
            get {
                return ResourceManager.GetString("ShadowedDeclarationInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Statically accessible sheet can be referred to by its code name. ähnelt.
        /// </summary>
        public static string SheetAccessedUsingStringInspection {
            get {
                return ResourceManager.GetString("SheetAccessedUsingStringInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;Step&apos; not specified. ähnelt.
        /// </summary>
        public static string StepIsNotSpecifiedInspection {
            get {
                return ResourceManager.GetString("StepIsNotSpecifiedInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 1 is the default step in a &apos;For...Next&apos; loop and therefore is redundant. ähnelt.
        /// </summary>
        public static string StepOneIsRedundantInspection {
            get {
                return ResourceManager.GetString("StepOneIsRedundantInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;Stop&apos; keyword halts execution. ähnelt.
        /// </summary>
        public static string StopKeywordInspection {
            get {
                return ResourceManager.GetString("StopKeywordInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}
        ///Andrew &quot;ThunderFrame&quot; Jackson would be proud! 
        ///You&apos;re seeing this inspection result because there&apos;s no way that&apos;s real code and you&apos;re just pushing the limits of Rubberduck&apos;s parsing and resolving capabilities, right? ...RIGHT? 
        ///In memoriam, 1972-2018 ähnelt.
        /// </summary>
        public static string ThunderCode_Base {
            get {
                return ResourceManager.GetString("ThunderCode_Base", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Variable &apos;{0}&apos; is used but not assigned. ähnelt.
        /// </summary>
        public static string UnassignedVariableUsageInspection {
            get {
                return ResourceManager.GetString("UnassignedVariableUsageInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Local variable &apos;{0}&apos; is not declared. ähnelt.
        /// </summary>
        public static string UndeclaredVariableInspection {
            get {
                return ResourceManager.GetString("UndeclaredVariableInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Public member name &apos;{0}&apos; contains an underscore. ähnelt.
        /// </summary>
        public static string UnderscoreInPublicClassModuleMemberInspection {
            get {
                return ResourceManager.GetString("UnderscoreInPublicClassModuleMemberInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Errors are ignored but never handled again. ähnelt.
        /// </summary>
        public static string UnhandledOnErrorResumeNextInspection {
            get {
                return ResourceManager.GetString("UnhandledOnErrorResumeNextInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Case clause &apos;{0}&apos; cannot be reached. ähnelt.
        /// </summary>
        public static string UnreachableCaseInspection {
            get {
                return ResourceManager.GetString("UnreachableCaseInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unreachable Case Else: all matches exist within prior Case statement(s). ähnelt.
        /// </summary>
        public static string UnreachableCaseInspection_CaseElse {
            get {
                return ResourceManager.GetString("UnreachableCaseInspection_CaseElse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unreachable: Case Statement contains invalid range clause(s). ähnelt.
        /// </summary>
        public static string UnreachableCaseInspection_InherentlyUnreachable {
            get {
                return ResourceManager.GetString("UnreachableCaseInspection_InherentlyUnreachable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unreachable: Case Statement will cause a Run-time error 6 (Overflow). ähnelt.
        /// </summary>
        public static string UnreachableCaseInspection_Overflow {
            get {
                return ResourceManager.GetString("UnreachableCaseInspection_Overflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unreachable: Case Statement will cause a Run-time error 13 (Mismatch). ähnelt.
        /// </summary>
        public static string UnreachableCaseInspection_TypeMismatch {
            get {
                return ResourceManager.GetString("UnreachableCaseInspection_TypeMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unreachable: Never matches or is equivalent to a prior Case statement. ähnelt.
        /// </summary>
        public static string UnreachableCaseInspection_Unreachable {
            get {
                return ResourceManager.GetString("UnreachableCaseInspection_Unreachable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Replace function &apos;{0}&apos; with existing typed function. ähnelt.
        /// </summary>
        public static string UntypedFunctionUsageInspection {
            get {
                return ResourceManager.GetString("UntypedFunctionUsageInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Variable &apos;{0}&apos; is not assigned. ähnelt.
        /// </summary>
        public static string VariableNotAssignedInspection {
            get {
                return ResourceManager.GetString("VariableNotAssignedInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} &apos;{1}&apos; is implicitly &apos;Variant&apos;. ähnelt.
        /// </summary>
        public static string VariableTypeNotDeclaredInspection {
            get {
                return ResourceManager.GetString("VariableTypeNotDeclaredInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Property &apos;{0}&apos; has no getter. ähnelt.
        /// </summary>
        public static string WriteOnlyPropertyInspection {
            get {
                return ResourceManager.GetString("WriteOnlyPropertyInspection", resourceCulture);
            }
        }
    }
}
